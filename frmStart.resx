<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bttnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>